+++ Introduction to Processing Images +++

--> Using images inside HTML
--> Referencing images inside CSS
--> Importing images inside JavaScript code
--> Compressing images for production builds

+++ Processing Images in Development Mode +++

--> Image in HTML handled automatically by HTML Loader

uncomment image in CSS

ui.js
---
import CheckmarkImage from '../../images/checkmark.svg';

src="${CheckmarkImage}"
---

webpack.dev.config.js
---
{
  test: /\.(png|jpg|svg)$/i,
  type: "asset",
  parser: {
    dataUrlCondition: { maxSize: 10 * 1024 },
  },
  generator: {
    filename: "./images/[name][ext]",
  },
}
---

+++ Optimizing Images for Production +++

npm install image-webpack-loader --save-dev
https://www.npmjs.com/package/image-webpack-loader
--> use imagemin under the hood to optimize images

webpack.prod.config.js
---
{
  test: /\.(png|jpg|svg)$/i,
  type: "asset",
  parser: {
    dataUrlCondition: { maxSize: 10 * 1024 },
  },
  generator: {
    filename: "./images/[name].[contenthash:12][ext]",
  },
  use: [
    {
      loader: "image-webpack-loader",
      options: {
        mozjpeg: { quality: 40 },
        pngquant: {
          quality: [0.65, 0.9],
          speed: 4,
        },
      },
    },
  ],
}
---

+++ One more way of Optimizing Images +++

npm install image-minimizer-webpack-plugin imagemin-gifsicle imagemin-mozjpeg imagemin-pngquant imagemin-svgo --save-dev

webpack.prod.config.js
---
const ImageMinimizerPlugin = require('image-minimizer-webpack-plugin');

optimization: {
  minimize: true,
  minimizer: [
    new CssMinimizerPlugin({
      minimizerOptions: {
        preset: ["default", { discardComments: { removeAll: true } }],
      },
    }),
    new ImageMinimizerPlugin({
      minimizer: {
        implementation: ImageMinimizerPlugin.imageminMinify,
        options: {
          plugins: [
            ["imagemin-mozjpeg", { quality: 40 }],
            ["imagemin-pngquant", { quality: [0.65, 0.9], speed: 4 }],
            ["imagemin-gifsicle", { interlaced: true }],
            [
              "imagemin-svgo",
              {
                plugins: [
                  {
                    name: "preset-default",
                    params: {
                      overrides: {
                        removeViewBox: false,
                        addAttributesToSVGElement: {
                          params: {
                            attributes: {
                              imlns: "http://www.w3.org/2000/svg",
                            },
                          },
                        },
                      },
                    },
                  },
                ],
              },
            ],
          ],
        },
      },
    }),
  ],
}

{
  test: /\.(png|jpg|svg)$/i,
  type: "asset",
  parser: {
    dataUrlCondition: { maxSize: 10 * 1024 },
  },
  generator: {
    filename: "./images/[name].[contenthash:12][ext]",
  },
}
---

ls -lha dist/images

+++ Processing large amounts of images +++

--> Fetch images,...

CopyWebpackPlugin
--> Copy images from one folder to another
--> Images can be optimized (work with ImageMinimizerPlugin,...)

npm install copy-webpack-plugin --save-dev

webpack.common.config.js
---
const CopyWebpackPlugin = require('copy-webpack-plugin');

plugins: [
  ...,
  new CopyWebpackPlugin({
    patterns: [{
      from: 'images/motivational-pictures/*.*'
    }]
  })
]
---

+++ Generating WEBP Images out of JPEG or PNG +++

webpack.prod.config.js
---
new ImageWebpackPlugin({
  minimizer: { ... },
  generator: [
    {
      type: 'asset',
      preset: 'webp-custom-name',
      implementation: ImageMinimizerPlugin.imageminGenerate,
      options: {
        plugins: ['imagemin-webp']
      }
    }
  ]
})
---
